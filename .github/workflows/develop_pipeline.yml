name: Develop Pipeline

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Get python version
      id: python
      run: |
        echo "::set-output name=version::$(python3 --version)"

    - name: Get poetry cache
      uses: actions/cache@v4
      id: cache-poetry
      with:
        path: |
          ~/.cache/pypoetry
          ~/.poetry
          .venv
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}-${{ steps.python.outputs.version }}
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - run: poetry install --no-interaction
      if: steps.cache-poetry.outputs.cache-hit != 'true'

    - name: Upload venv for reuse
      if: steps.cache-poetry.outputs.cache-hit != 'true'
      uses: actions/upload-artifact@v4
      with:
        name: python-venv
        path: .venv

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Download venv
        uses: actions/download-artifact@v3
        with:
            name: python-venv
            path: .venv
        
      - name: Run linter
        run: |
            source .venv/bin/activate
            flake8 .

  # test:
  #   needs: setup
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
      
  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: '3.10'
      
  #     - name: Load cached Poetry installation
  #       uses: actions/cache@v4
  #       with:
  #         path: |
  #           ~/.cache/pypoetry
  #           ~/.poetry
  #           .venv
  #         key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      
  #     - name: Install Poetry
  #       uses: snok/install-poetry@v1
  #       with:
  #         virtualenvs-create: true
  #         virtualenvs-in-project: true
      
  #     - name: Load cached venv
  #       uses: actions/cache@v4
  #       with:
  #         path: .venv
  #         key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      
  #     - name: Run tests
  #       run: poetry run pytest .

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [lint, test]
  #   steps:
  #   - name: Deploy
  #     if: success()
  #     run: |
  #       echo "Deploying the application..."