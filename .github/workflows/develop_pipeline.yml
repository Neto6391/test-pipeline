name: Develop Pipeline

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: cache poetry install
      uses: actions/cache@v4
      with:
          path: ~/.local
          key: ${{ runner.os }}-poetry
          restore-keys: ${{ runner.os }}-poetry
    - run: pipx install poetry

    - name: cache deps
      id: cache-deps
      uses: actions/cache@v4
      with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}

    - run: poetry install --no-interaction --no-root
      if: steps.cache-deps.outputs.cache-hit != 'true'
    - run: poetry install --no-interaction

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
            path: ~/.local
            key: ${{ runner.os }}-poetry
            restore-keys: ${{ runner.os }}-poetry
      - name: Run linter
        run: poetry run flake8 .

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
            path: ~/.local
            key: ${{ runner.os }}-poetry
            restore-keys: ${{ runner.os }}-poetry
      - name: Run tests
        run: poetry run pytest .

  deploy:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
    - name: Deploy
      if: success()
      run: |
        echo "Deploying the application..."