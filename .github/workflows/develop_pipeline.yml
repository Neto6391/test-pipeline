name: Develop Pipeline

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cached-poetry-dependencies.outputs.cache-hit }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Cache Poetry and Dependencies
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pypoetry
          ~/.poetry
          .venv
        key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
    
    - name: Install Poetry and Dependencies
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        export PATH="$HOME/.local/bin:$PATH"
        poetry install --no-interaction --no-root
    
  lint-test:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        task: [lint, test]
    steps:
    - uses: actions/checkout@v4

    - name: Restore Cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pypoetry
          ~/.poetry
          .venv
        key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Run ${{ matrix.task }}
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        poetry run ${{ matrix.task }} .
  
  deploy:
    runs-on: ubuntu-latest
    needs: [lint-test]
    if: needs.lint-test.result == 'success'
    steps:
    - name: Deploy
      run: echo "Deploying the application..."
