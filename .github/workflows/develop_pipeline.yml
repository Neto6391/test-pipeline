name: Develop Pipeline

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
env:
  PYTHON_VERSION: '3.10'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Cache Poetry installation
        id: cache-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local/bin/poetry
          key: poetry-${{ runner.os }}-${{ env.PYTHON_VERSION }}
          restore-keys: |
            poetry-${{ runner.os }}-

      - name: Install Poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "Poetry installed"

      - name: Cache Poetry binary
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: ~/.local/bin/poetry
          key: poetry-${{ runner.os }}-${{ env.PYTHON_VERSION }}

      - name: Cache dependencies
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('**/pyproject.toml') }}
        
      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-root

      - name: Run linter
        run: |
          poetry run flake8 .

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Cache Poetry installation
        id: cache-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local/bin/poetry
          key: poetry-${{ runner.os }}-${{ env.PYTHON_VERSION }}
          restore-keys: |
            poetry-${{ runner.os }}-

      - name: Install Poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "Poetry installed"

      - name: Cache Poetry binary
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: ~/.local/bin/poetry
          key: poetry-${{ runner.os }}-${{ env.PYTHON_VERSION }}

      - name: Cache dependencies
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('**/pyproject.toml') }}
          
      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-root

      - name: Run tests
        run: |
          poetry run pytest .

  deploy:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
    - name: Deploy
      if: success()
      run: |
        echo "Deploying the application..."
