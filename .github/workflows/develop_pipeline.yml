name: Develop Pipeline

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Cache Poetry and Dependencies
      id: cache-poetry
      uses: actions/cache@v4
      with:
          path: |
            ~/.cache/pypoetry
            ~/.poetry
            .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Restore Poetry from Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.poetry
            .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          
      - name: Add Poetry to PATH
        run: export PATH="$HOME/.local/bin:$PATH"
  
      - name: Run linter
        run: poetry run flake8 .

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Restore Poetry from Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.poetry
            .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          
      - name: Add Poetry to PATH
        run: export PATH="$HOME/.local/bin:$PATH"

      - name: Run tests
        run: poetry run pytest .

  deploy:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
    - name: Deploy
      if: success()
      run: |
        echo "Deploying the application..."