name: Develop Pipeline

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python and Poetry
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Cache Poetry and venv
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pypoetry
          ~/.poetry
          .venv
        key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          poetry-${{ runner.os }}-

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - uses: actions/checkout@v4
    - name: Run linter
      run: poetry run flake8 .

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - uses: actions/checkout@v4
    - name: Run tests
      run: poetry run pytest .

  deploy:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
    - name: Deploy
      if: success()
      run: |
        echo "Deploying the application..."